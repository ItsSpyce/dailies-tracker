{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Qconst errors = []; window.addEventListener('error', (event) => { errors.push(event.error.stack || event.error); }); function copyErrorsToClipboard() { const errorsAsJson = JSON.stringify(errors, null, 2); navigator.clipboard.writeText(errorsAsJson); } function showErrors() { const errorsElement = document.getElementById('errors'); errorsElement.textContent = errors.join('\\n'); errorsElement.style.display = 'block'; } function openBugReport() { const url = 'https://github.com/ItsSpyce/dailies-tracker/issues/new?assignees=&labels=&projects=&template=bug_report.md&title='; window.open(url, '_blank'); } </script> </head> <body> <div id=\"root\"></div> <div id=\"error-fallback\" hidden=\"hidden\"> <h1>An error occurred.</h1> <p> To prevent you from not being able to do anything, a few tools have been provided on this page.\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Qconst errors = []; window.addEventListener('error', (event) => { errors.push(event.error.stack || event.error); }); function copyErrorsToClipboard() { const errorsAsJson = JSON.stringify(errors, null, 2); navigator.clipboard.writeText(errorsAsJson); } function showErrors() { const errorsElement = document.getElementById('errors'); errorsElement.textContent = errors.join('\\n'); errorsElement.style.display = 'block'; } function openBugReport() { const url = 'https://github.com/ItsSpyce/dailies-tracker/issues/new?assignees=&labels=&projects=&template=bug_report.md&title='; window.open(url, '_blank'); } </script> </head> <body> <div id=\"root\"></div> <div id=\"error-fallback\" hidden=\"hidden\"> <h1>An error occurred.</h1> <p> To prevent you from not being able to do anything, a few tools have been provided on this page.\\E$"}
{"rule":"LC_AFTER_PERIOD","sentence":"^\\Qconst errors = []; window.addEventListener('error', (event) => { errors.push(event.error.stack || event.error); }); function copyErrorsToClipboard() { const errorsAsJson = JSON.stringify(errors, null, 2); navigator.clipboard.writeText(errorsAsJson); } function showErrors() { const errorsElement = document.getElementById('errors'); errorsElement.textContent = errors.join('\\n'); errorsElement.style.display = 'block'; } function openBugReport() { const url = 'https://github.com/ItsSpyce/dailies-tracker/issues/new?assignees=&labels=&projects=&template=bug_report.md&title='; window.open(url, '_blank'); } </script> </head> <body> <div id=\"root\"></div> <div id=\"error-fallback\" hidden=\"hidden\"> <h1>An error occurred.</h1> <p> To prevent you from not being able to do anything, a few tools have been provided on this page.\\E$"}
{"rule":"ARROWS","sentence":"^\\Qconst errors = []; window.addEventListener('error', (event) => { errors.push(event.error.stack || event.error); }); function copyErrorsToClipboard() { const errorsAsJson = JSON.stringify(errors, null, 2); navigator.clipboard.writeText(errorsAsJson); } function showErrors() { const errorsElement = document.getElementById('errors'); errorsElement.textContent = errors.join('\\n'); errorsElement.style.display = 'block'; } function openBugReport() { const url = 'https://github.com/ItsSpyce/dailies-tracker/issues/new?assignees=&labels=&projects=&template=bug_report.md&title='; window.open(url, '_blank'); } </script> </head> <body> <div id=\"root\"></div> <div id=\"error-fallback\" hidden=\"hidden\"> <h1>An error occurred.</h1> <p> To prevent you from not being able to do anything, a few tools have been provided on this page.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qconst errors = []; window.addEventListener('error', (event) => { errors.push(event.error.stack || event.error); }); function copyErrorsToClipboard() { const errorsAsJson = JSON.stringify(errors, null, 2); navigator.clipboard.writeText(errorsAsJson); } function showErrors() { const errorsElement = document.getElementById('errors'); errorsElement.textContent = errors.join('\\n'); errorsElement.style.display = 'block'; } function openBugReport() { const url = 'https://github.com/ItsSpyce/dailies-tracker/issues/new?assignees=&labels=&projects=&template=bug_report.md&title='; window.open(url, '_blank'); } </script> </head> <body> <div id=\"root\"></div> <div id=\"error-fallback\" hidden=\"hidden\"> <h1>An error occurred.</h1> <p> To prevent you from not being able to do anything, a few tools have been provided on this page.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"window.location.reload()\">Reload</button> <button onclick=\"localStorage.clear(); window.location.reload()\"> Clear Cache </button> </div> <p> To make reporting your issue easier, a button has been provided below that will copy your messages to the clipboard.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button>Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"ARROWS","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button>Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button>Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button>Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button onclick=\"openBugReport()\">Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"ARROWS","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button onclick=\"openBugReport()\">Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button onclick=\"openBugReport()\">Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q</p> <div class=\"btn-group\"> <button onclick=\"copyErrorsToClipboard()\">Copy Errors</button> <button onclick=\"showErrors()\">Show errors below</button> <button onclick=\"openBugReport()\">Create a bug report</button> </div> <pre id=\"errors\" style=\"display: none\"></pre> </div> <script type=\"module\" src=\"/src/renderer.ts\"></script> <script> setTimeout(() => { const root = document.getElementById('root'); if (root.childElementCount === 0) { document.getElementById('error-fallback').removeAttribute('hidden'); } }, 1000); </script> </body> </html>\\E$"}
